; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_alpha_test_1.txt
;
#const C1.a= $lightmap_specular_brightness
#const C3.rgb= $specular_color
#case $lightmap_type=0
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
samplerCUBE s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
TextureCube s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 2 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= texCUBE(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xyz);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(T3)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex3.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: R0a= EXPAND(T3b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(tex3.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T1a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    r0.a= temp12;
    tex1.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(T3).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(tex3.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(R0a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= r0.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 38: R0= D1 + D1*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(color1.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 39: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp59;
    r0.a= temp69;
    // exp.components=1 term=1
    // line 44: R1= R0.C1a
    float temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float temp75;
    temp75= 0.752941;
    float3 temp76;
    float temp77;
    temp77= dot(temp73, temp75);
    temp72= temp77;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*T1a
    float temp84;
    float temp85;
    temp85= c1.a;
    float3 temp86;
    float temp87;
    temp87= saturate(tex1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r1.rgb= temp72;
    color1.a= temp78;
    tex1.a= temp84;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp90;
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    float3 temp93;
    temp93= saturate(tex0.rgb);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    temp90= 2 * temp90;
    // exp.components=3 term=3
    // line 52: D1= OUT_SCALE_BY_2(C0*D1)
    float3 temp96;
    float3 temp97;
    temp97= c3.rgb;
    float3 temp98;
    float3 temp99;
    temp99= saturate(color1.rgb);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    temp96= 2 * temp96;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp102;
    float temp103;
    temp103= saturate(color1.a);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 54: T1a= T1a*C0a
    float temp108;
    float temp109;
    temp109= saturate(tex1.a);
    float3 temp110;
    float temp111;
    temp111= 0.996078;
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    r0.rgb= temp90;
    color1.rgb= temp96;
    r1.a= temp102;
    tex1.a= temp108;
    // exp.components=1 term=1
    // line 59: D1= 0
    float temp114;
    float temp115;
    temp115= 0;
    float3 temp116;
    temp114= temp115;
    // exp.components=1 term=1
    // line 60: R1a= 0
    float temp117;
    float temp118;
    temp118= 0;
    float3 temp119;
    temp117= temp118;
    color1.rgb= temp114;
    r1.a= temp117;
    // exp.components=3 term=3
    // line 77: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp120;
    float temp121;
    temp121= saturate(r1.a);
    float3 temp122;
    float3 temp123;
    temp123= saturate(color1.rgb);
    float3 temp124;
    float3 temp125;
    temp125= temp121 * temp123;
    temp120= temp125;
    temp120= 2 * temp120;
    // exp.components=1 term=1 term=1
    // line 78: T2a= C0a mux T1a
    float temp126;
    float temp127;
    float temp128;
    float temp129;
    temp129= 1.000000;
    float3 temp130;
    temp127= temp129;
    float temp131;
    temp131= saturate(tex1.a);
    float3 temp132;
    temp128= temp131;
    temp126= lerp(temp127,temp128,round(r0.a));
    color1.rgb= temp120;
    tex2.a= temp126;
    // exp.components=3 term=3 term=3
    // line 81: SRCCOLOR= D1 + R0
    float3 temp133;
    float3 temp134;
    float3 temp135;
    float3 temp136;
    temp136= saturate(color1.rgb);
    float3 temp137;
    temp134= temp136;
    float3 temp138;
    temp138= saturate(r0.rgb);
    float3 temp139;
    temp135= temp138;
    temp133= temp134 + temp135;
    // exp.components=1 term=1
    // line 82: SRCALPHA= T2a
    float temp140;
    float temp141;
    temp141= saturate(tex2.a);
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp133;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=1
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
samplerCUBE s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
TextureCube s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 2 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= texCUBE(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xyz);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(T3)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex3.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: R0a= EXPAND(T3b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(tex3.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T1a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    r0.a= temp12;
    tex1.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(T3).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(tex3.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(R0a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= r0.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 38: R0= D1 + D1*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(color1.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 39: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp59;
    r0.a= temp69;
    // exp.components=1 term=1
    // line 44: R1= R0.C1a
    float temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float temp75;
    temp75= 0.752941;
    float3 temp76;
    float temp77;
    temp77= dot(temp73, temp75);
    temp72= temp77;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*T1a
    float temp84;
    float temp85;
    temp85= c1.a;
    float3 temp86;
    float temp87;
    temp87= saturate(tex1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r1.rgb= temp72;
    color1.a= temp78;
    tex1.a= temp84;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp90;
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    float3 temp93;
    temp93= saturate(tex0.rgb);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    temp90= 2 * temp90;
    // exp.components=3 term=3
    // line 52: D1= OUT_SCALE_BY_2(C0*D1)
    float3 temp96;
    float3 temp97;
    temp97= c3.rgb;
    float3 temp98;
    float3 temp99;
    temp99= saturate(color1.rgb);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    temp96= 2 * temp96;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp102;
    float temp103;
    temp103= saturate(color1.a);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 54: T1a= T1a*C0a
    float temp108;
    float temp109;
    temp109= saturate(tex1.a);
    float3 temp110;
    float temp111;
    temp111= 0.996078;
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    r0.rgb= temp90;
    color1.rgb= temp96;
    r1.a= temp102;
    tex1.a= temp108;
    // exp.components=3 term=3
    // line 63: D1= OUT_SCALE_BY_2(D1*T1a)
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float temp117;
    temp117= saturate(tex1.a);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp114= temp119;
    temp114= 2 * temp114;
    // exp.components=1 term=1
    // line 64: R1a= R1a*R1a
    float temp120;
    float temp121;
    temp121= saturate(r1.a);
    float3 temp122;
    float temp123;
    temp123= saturate(r1.a);
    float3 temp124;
    float temp125;
    temp125= temp121 * temp123;
    temp120= temp125;
    color1.rgb= temp114;
    r1.a= temp120;
    // exp.components=3 term=3
    // line 77: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp126;
    float temp127;
    temp127= saturate(r1.a);
    float3 temp128;
    float3 temp129;
    temp129= saturate(color1.rgb);
    float3 temp130;
    float3 temp131;
    temp131= temp127 * temp129;
    temp126= temp131;
    temp126= 2 * temp126;
    // exp.components=1 term=1 term=1
    // line 78: T2a= C0a mux T1a
    float temp132;
    float temp133;
    float temp134;
    float temp135;
    temp135= 1.000000;
    float3 temp136;
    temp133= temp135;
    float temp137;
    temp137= saturate(tex1.a);
    float3 temp138;
    temp134= temp137;
    temp132= lerp(temp133,temp134,round(r0.a));
    color1.rgb= temp126;
    tex2.a= temp132;
    // exp.components=3 term=3 term=3
    // line 81: SRCCOLOR= D1 + R0
    float3 temp139;
    float3 temp140;
    float3 temp141;
    float3 temp142;
    temp142= saturate(color1.rgb);
    float3 temp143;
    temp140= temp142;
    float3 temp144;
    temp144= saturate(r0.rgb);
    float3 temp145;
    temp141= temp144;
    temp139= temp140 + temp141;
    // exp.components=1 term=1
    // line 82: SRCALPHA= T2a
    float temp146;
    float temp147;
    temp147= saturate(tex2.a);
    float3 temp148;
    temp146= temp147;
    r0.rgb= temp139;
    r0.a= temp146;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=2
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
samplerCUBE s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
TextureCube s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 2 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= texCUBE(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xyz);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(T3)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex3.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: R0a= EXPAND(T3b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(tex3.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T1a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    r0.a= temp12;
    tex1.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(T3).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(tex3.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(R0a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= r0.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 38: R0= D1 + D1*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(color1.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 39: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp59;
    r0.a= temp69;
    // exp.components=1 term=1
    // line 44: R1= R0.C1a
    float temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float temp75;
    temp75= 0.752941;
    float3 temp76;
    float temp77;
    temp77= dot(temp73, temp75);
    temp72= temp77;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*T1a
    float temp84;
    float temp85;
    temp85= c1.a;
    float3 temp86;
    float temp87;
    temp87= saturate(tex1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r1.rgb= temp72;
    color1.a= temp78;
    tex1.a= temp84;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp90;
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    float3 temp93;
    temp93= saturate(tex0.rgb);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    temp90= 2 * temp90;
    // exp.components=3 term=3
    // line 52: D1= OUT_SCALE_BY_2(C0*D1)
    float3 temp96;
    float3 temp97;
    temp97= c3.rgb;
    float3 temp98;
    float3 temp99;
    temp99= saturate(color1.rgb);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    temp96= 2 * temp96;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp102;
    float temp103;
    temp103= saturate(color1.a);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 54: T1a= T1a*C0a
    float temp108;
    float temp109;
    temp109= saturate(tex1.a);
    float3 temp110;
    float temp111;
    temp111= 0.996078;
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    r0.rgb= temp90;
    color1.rgb= temp96;
    r1.a= temp102;
    tex1.a= temp108;
    // exp.components=3 term=3
    // line 67: D1= OUT_SCALE_BY_2(D1*T1a)
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float temp117;
    temp117= saturate(tex1.a);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp114= temp119;
    temp114= 2 * temp114;
    // exp.components=1 term=1
    // line 68: R1a= D1a
    float temp120;
    float temp121;
    temp121= saturate(color1.a);
    float3 temp122;
    temp120= temp121;
    color1.rgb= temp114;
    r1.a= temp120;
    // exp.components=3 term=3
    // line 77: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp123;
    float temp124;
    temp124= saturate(r1.a);
    float3 temp125;
    float3 temp126;
    temp126= saturate(color1.rgb);
    float3 temp127;
    float3 temp128;
    temp128= temp124 * temp126;
    temp123= temp128;
    temp123= 2 * temp123;
    // exp.components=1 term=1 term=1
    // line 78: T2a= C0a mux T1a
    float temp129;
    float temp130;
    float temp131;
    float temp132;
    temp132= 1.000000;
    float3 temp133;
    temp130= temp132;
    float temp134;
    temp134= saturate(tex1.a);
    float3 temp135;
    temp131= temp134;
    temp129= lerp(temp130,temp131,round(r0.a));
    color1.rgb= temp123;
    tex2.a= temp129;
    // exp.components=3 term=3 term=3
    // line 81: SRCCOLOR= D1 + R0
    float3 temp136;
    float3 temp137;
    float3 temp138;
    float3 temp139;
    temp139= saturate(color1.rgb);
    float3 temp140;
    temp137= temp139;
    float3 temp141;
    temp141= saturate(r0.rgb);
    float3 temp142;
    temp138= temp141;
    temp136= temp137 + temp138;
    // exp.components=1 term=1
    // line 82: SRCALPHA= T2a
    float temp143;
    float temp144;
    temp144= saturate(tex2.a);
    float3 temp145;
    temp143= temp144;
    r0.rgb= temp136;
    r0.a= temp143;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=3
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
samplerCUBE s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
TextureCube s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 2 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= texCUBE(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xyz);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(T3)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(tex3.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: R0a= EXPAND(T3b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(tex3.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T1a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    r0.a= temp12;
    tex1.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(T3).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(tex3.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(R0a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= r0.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 38: R0= D1 + D1*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(color1.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(color1.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 39: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    r0.rgb= temp59;
    r0.a= temp69;
    // exp.components=1 term=1
    // line 44: R1= R0.C1a
    float temp72;
    float3 temp73;
    temp73= saturate(r0.rgb);
    float3 temp74;
    float temp75;
    temp75= 0.752941;
    float3 temp76;
    float temp77;
    temp77= dot(temp73, temp75);
    temp72= temp77;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*T1a
    float temp84;
    float temp85;
    temp85= c1.a;
    float3 temp86;
    float temp87;
    temp87= saturate(tex1.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    r1.rgb= temp72;
    color1.a= temp78;
    tex1.a= temp84;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp90;
    float3 temp91;
    temp91= saturate(r0.rgb);
    float3 temp92;
    float3 temp93;
    temp93= saturate(tex0.rgb);
    float3 temp94;
    float3 temp95;
    temp95= temp91 * temp93;
    temp90= temp95;
    temp90= 2 * temp90;
    // exp.components=3 term=3
    // line 52: D1= OUT_SCALE_BY_2(C0*D1)
    float3 temp96;
    float3 temp97;
    temp97= c3.rgb;
    float3 temp98;
    float3 temp99;
    temp99= saturate(color1.rgb);
    float3 temp100;
    float3 temp101;
    temp101= temp97 * temp99;
    temp96= temp101;
    temp96= 2 * temp96;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp102;
    float temp103;
    temp103= saturate(color1.a);
    float3 temp104;
    float temp105;
    temp105= saturate(color1.a);
    float3 temp106;
    float temp107;
    temp107= temp103 * temp105;
    temp102= temp107;
    // exp.components=1 term=1
    // line 54: T1a= T1a*C0a
    float temp108;
    float temp109;
    temp109= saturate(tex1.a);
    float3 temp110;
    float temp111;
    temp111= 0.996078;
    float3 temp112;
    float temp113;
    temp113= temp109 * temp111;
    temp108= temp113;
    r0.rgb= temp90;
    color1.rgb= temp96;
    r1.a= temp102;
    tex1.a= temp108;
    // exp.components=3 term=3
    // line 71: D1= OUT_SCALE_BY_2(D1*T1a)
    float3 temp114;
    float3 temp115;
    temp115= saturate(color1.rgb);
    float3 temp116;
    float temp117;
    temp117= saturate(tex1.a);
    float3 temp118;
    float3 temp119;
    temp119= temp115 * temp117;
    temp114= temp119;
    temp114= 2 * temp114;
    // exp.components=1 term=1 term=1
    // line 72: R1a= OUT_SCALE_BY_2(R1a*R1a - 1/2)
    float temp120;
    float temp121;
    float temp122;
    float temp123;
    temp123= saturate(r1.a);
    float3 temp124;
    float temp125;
    temp125= saturate(r1.a);
    float3 temp126;
    float temp127;
    temp127= temp123 * temp125;
    temp121= temp127;
    float temp128;
    temp128= 0.5;
    float3 temp129;
    temp122= temp128;
    temp120= temp121 - temp122;
    temp120= 2 * temp120;
    color1.rgb= temp114;
    r1.a= temp120;
    // exp.components=3 term=3
    // line 77: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp130;
    float temp131;
    temp131= saturate(r1.a);
    float3 temp132;
    float3 temp133;
    temp133= saturate(color1.rgb);
    float3 temp134;
    float3 temp135;
    temp135= temp131 * temp133;
    temp130= temp135;
    temp130= 2 * temp130;
    // exp.components=1 term=1 term=1
    // line 78: T2a= C0a mux T1a
    float temp136;
    float temp137;
    float temp138;
    float temp139;
    temp139= 1.000000;
    float3 temp140;
    temp137= temp139;
    float temp141;
    temp141= saturate(tex1.a);
    float3 temp142;
    temp138= temp141;
    temp136= lerp(temp137,temp138,round(r0.a));
    color1.rgb= temp130;
    tex2.a= temp136;
    // exp.components=3 term=3 term=3
    // line 81: SRCCOLOR= D1 + R0
    float3 temp143;
    float3 temp144;
    float3 temp145;
    float3 temp146;
    temp146= saturate(color1.rgb);
    float3 temp147;
    temp144= temp146;
    float3 temp148;
    temp148= saturate(r0.rgb);
    float3 temp149;
    temp145= temp148;
    temp143= temp144 + temp145;
    // exp.components=1 term=1
    // line 82: SRCALPHA= T2a
    float temp150;
    float temp151;
    temp151= saturate(tex2.a);
    float3 temp152;
    temp150= temp151;
    r0.rgb= temp143;
    r0.a= temp150;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
