; compiled from tags\rasterizer\pixel_shaders_dx9\shaders_shader_passes_lightmap_lightmap_tex_detail_alpha_test_0.txt
;
#const C2.a= $lightmap_specular_brightness
#const C4.rgb= $specular_color
#case $lightmap_type=0
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
sampler2D s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
Texture2D s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= tex2Dproj(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xy/tc3.w);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(D1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(color1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: T1a= EXPAND(D1b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(color1.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T3a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    tex1.a= temp12;
    tex3.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(D1).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(color1.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(T1a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= tex1.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 39: R0= T3 + T3*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex3.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(tex3.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 40: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    // exp.components=1 term=1
    // line 41: T3a= C0a*T3a
    float temp72;
    float temp73;
    temp73= 0.996078;
    float3 temp74;
    float temp75;
    temp75= saturate(tex3.a);
    float3 temp76;
    float temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp59;
    r0.a= temp69;
    tex3.a= temp72;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*R0a
    float temp84;
    float temp85;
    temp85= c2.a;
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    // exp.components=1 term=1 term=1
    // line 47: R1= C1a mux T3a
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= 1.000000;
    float3 temp94;
    temp91= temp93;
    float temp95;
    temp95= saturate(tex3.a);
    float3 temp96;
    temp92= temp95;
    temp90= lerp(temp91,temp92,round(r0.a));
    color1.a= temp78;
    tex1.a= temp84;
    r1.rgb= temp90;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp97;
    float3 temp98;
    temp98= saturate(r0.rgb);
    float3 temp99;
    float3 temp100;
    temp100= saturate(tex0.rgb);
    float3 temp101;
    float3 temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    temp97= 2 * temp97;
    // exp.components=3 term=3
    // line 52: T3= OUT_SCALE_BY_2(C0*T3)
    float3 temp103;
    float3 temp104;
    temp104= c4.rgb;
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex3.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    temp103= 2 * temp103;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp109;
    float temp110;
    temp110= saturate(color1.a);
    float3 temp111;
    float temp112;
    temp112= saturate(color1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    r0.rgb= temp97;
    tex3.rgb= temp103;
    r1.a= temp109;
    // exp.components=1 term=1
    // line 58: D1= 0
    float temp115;
    float temp116;
    temp116= 0;
    float3 temp117;
    temp115= temp116;
    // exp.components=1 term=1
    // line 59: R1a= 0
    float temp118;
    float temp119;
    temp119= 0;
    float3 temp120;
    temp118= temp119;
    color1.rgb= temp115;
    r1.a= temp118;
    // exp.components=3 term=3
    // line 75: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp121;
    float temp122;
    temp122= saturate(r1.a);
    float3 temp123;
    float3 temp124;
    temp124= saturate(color1.rgb);
    float3 temp125;
    float3 temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    temp121= 2 * temp121;
    color1.rgb= temp121;
    // exp.components=3 term=3 term=3
    // line 78: SRCCOLOR= R0 + D1
    float3 temp127;
    float3 temp128;
    float3 temp129;
    float3 temp130;
    temp130= saturate(r0.rgb);
    float3 temp131;
    temp128= temp130;
    float3 temp132;
    temp132= saturate(color1.rgb);
    float3 temp133;
    temp129= temp132;
    temp127= temp128 + temp129;
    // exp.components=1 term=1
    // line 79: SRCALPHA= R1b
    float temp134;
    float temp135;
    temp135= saturate(r1.b);
    float3 temp136;
    temp134= temp135;
    r0.rgb= temp127;
    r0.a= temp134;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=1
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
sampler2D s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
Texture2D s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= tex2Dproj(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xy/tc3.w);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(D1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(color1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: T1a= EXPAND(D1b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(color1.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T3a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    tex1.a= temp12;
    tex3.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(D1).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(color1.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(T1a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= tex1.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 39: R0= T3 + T3*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex3.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(tex3.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 40: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    // exp.components=1 term=1
    // line 41: T3a= C0a*T3a
    float temp72;
    float temp73;
    temp73= 0.996078;
    float3 temp74;
    float temp75;
    temp75= saturate(tex3.a);
    float3 temp76;
    float temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp59;
    r0.a= temp69;
    tex3.a= temp72;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*R0a
    float temp84;
    float temp85;
    temp85= c2.a;
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    // exp.components=1 term=1 term=1
    // line 47: R1= C1a mux T3a
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= 1.000000;
    float3 temp94;
    temp91= temp93;
    float temp95;
    temp95= saturate(tex3.a);
    float3 temp96;
    temp92= temp95;
    temp90= lerp(temp91,temp92,round(r0.a));
    color1.a= temp78;
    tex1.a= temp84;
    r1.rgb= temp90;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp97;
    float3 temp98;
    temp98= saturate(r0.rgb);
    float3 temp99;
    float3 temp100;
    temp100= saturate(tex0.rgb);
    float3 temp101;
    float3 temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    temp97= 2 * temp97;
    // exp.components=3 term=3
    // line 52: T3= OUT_SCALE_BY_2(C0*T3)
    float3 temp103;
    float3 temp104;
    temp104= c4.rgb;
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex3.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    temp103= 2 * temp103;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp109;
    float temp110;
    temp110= saturate(color1.a);
    float3 temp111;
    float temp112;
    temp112= saturate(color1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    r0.rgb= temp97;
    tex3.rgb= temp103;
    r1.a= temp109;
    // exp.components=3 term=3
    // line 62: D1= OUT_SCALE_BY_2(T3*T1a)
    float3 temp115;
    float3 temp116;
    temp116= saturate(tex3.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex1.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    temp115= 2 * temp115;
    // exp.components=1 term=1
    // line 63: R1a= R1a*R1a
    float temp121;
    float temp122;
    temp122= saturate(r1.a);
    float3 temp123;
    float temp124;
    temp124= saturate(r1.a);
    float3 temp125;
    float temp126;
    temp126= temp122 * temp124;
    temp121= temp126;
    color1.rgb= temp115;
    r1.a= temp121;
    // exp.components=3 term=3
    // line 75: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp127;
    float temp128;
    temp128= saturate(r1.a);
    float3 temp129;
    float3 temp130;
    temp130= saturate(color1.rgb);
    float3 temp131;
    float3 temp132;
    temp132= temp128 * temp130;
    temp127= temp132;
    temp127= 2 * temp127;
    color1.rgb= temp127;
    // exp.components=3 term=3 term=3
    // line 78: SRCCOLOR= R0 + D1
    float3 temp133;
    float3 temp134;
    float3 temp135;
    float3 temp136;
    temp136= saturate(r0.rgb);
    float3 temp137;
    temp134= temp136;
    float3 temp138;
    temp138= saturate(color1.rgb);
    float3 temp139;
    temp135= temp138;
    temp133= temp134 + temp135;
    // exp.components=1 term=1
    // line 79: SRCALPHA= R1b
    float temp140;
    float temp141;
    temp141= saturate(r1.b);
    float3 temp142;
    temp140= temp141;
    r0.rgb= temp133;
    r0.a= temp140;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=2
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
sampler2D s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
Texture2D s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= tex2Dproj(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xy/tc3.w);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(D1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(color1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: T1a= EXPAND(D1b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(color1.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T3a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    tex1.a= temp12;
    tex3.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(D1).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(color1.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(T1a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= tex1.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 39: R0= T3 + T3*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex3.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(tex3.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 40: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    // exp.components=1 term=1
    // line 41: T3a= C0a*T3a
    float temp72;
    float temp73;
    temp73= 0.996078;
    float3 temp74;
    float temp75;
    temp75= saturate(tex3.a);
    float3 temp76;
    float temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp59;
    r0.a= temp69;
    tex3.a= temp72;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*R0a
    float temp84;
    float temp85;
    temp85= c2.a;
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    // exp.components=1 term=1 term=1
    // line 47: R1= C1a mux T3a
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= 1.000000;
    float3 temp94;
    temp91= temp93;
    float temp95;
    temp95= saturate(tex3.a);
    float3 temp96;
    temp92= temp95;
    temp90= lerp(temp91,temp92,round(r0.a));
    color1.a= temp78;
    tex1.a= temp84;
    r1.rgb= temp90;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp97;
    float3 temp98;
    temp98= saturate(r0.rgb);
    float3 temp99;
    float3 temp100;
    temp100= saturate(tex0.rgb);
    float3 temp101;
    float3 temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    temp97= 2 * temp97;
    // exp.components=3 term=3
    // line 52: T3= OUT_SCALE_BY_2(C0*T3)
    float3 temp103;
    float3 temp104;
    temp104= c4.rgb;
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex3.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    temp103= 2 * temp103;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp109;
    float temp110;
    temp110= saturate(color1.a);
    float3 temp111;
    float temp112;
    temp112= saturate(color1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    r0.rgb= temp97;
    tex3.rgb= temp103;
    r1.a= temp109;
    // exp.components=3 term=3
    // line 66: D1= OUT_SCALE_BY_2(T3*T1a)
    float3 temp115;
    float3 temp116;
    temp116= saturate(tex3.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex1.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    temp115= 2 * temp115;
    // exp.components=1 term=1
    // line 67: R1a= D1a
    float temp121;
    float temp122;
    temp122= saturate(color1.a);
    float3 temp123;
    temp121= temp122;
    color1.rgb= temp115;
    r1.a= temp121;
    // exp.components=3 term=3
    // line 75: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp124;
    float temp125;
    temp125= saturate(r1.a);
    float3 temp126;
    float3 temp127;
    temp127= saturate(color1.rgb);
    float3 temp128;
    float3 temp129;
    temp129= temp125 * temp127;
    temp124= temp129;
    temp124= 2 * temp124;
    color1.rgb= temp124;
    // exp.components=3 term=3 term=3
    // line 78: SRCCOLOR= R0 + D1
    float3 temp130;
    float3 temp131;
    float3 temp132;
    float3 temp133;
    temp133= saturate(r0.rgb);
    float3 temp134;
    temp131= temp133;
    float3 temp135;
    temp135= saturate(color1.rgb);
    float3 temp136;
    temp132= temp135;
    temp130= temp131 + temp132;
    // exp.components=1 term=1
    // line 79: SRCALPHA= R1b
    float temp137;
    float temp138;
    temp138= saturate(r1.b);
    float3 temp139;
    temp137= temp138;
    r0.rgb= temp130;
    r0.a= temp137;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
#case $lightmap_type=3
#ifndef DX11
sampler2D s0 : register(s0);
sampler2D s1 : register(s1);
sampler2D s2 : register(s2);
sampler2D s3 : register(s3);
#else // DX11
SamplerState s0 : register(s0);
Texture2D s0tex : register(t0);
SamplerState s1 : register(s1);
Texture2D s1tex : register(t1);
SamplerState s2 : register(s2);
Texture2D s2tex : register(t2);
SamplerState s3 : register(s3);
Texture2D s3tex : register(t3);
#endif // DX11
float4 bumpenv : register(C0);    // .r=m00 .g=m01 .b=m10 .a=m11
float4 c1 : register(C1);
float4 c2 : register(C2);
float4 c3 : register(C3);
float4 c4 : register(C4);
float4 zwriteout : register(c16);
struct MRT_return
{
    float4 color :COLOR0;
    float4 depth :COLOR1;
};
#ifndef MRT
float4 main(
#else
MRT_return main(
#endif
#ifdef DX11
    float4 pos_unused : SV_POSITION,
#endif
    float4 color0 : COLOR0,
    float4 color1 : COLOR1,
#ifdef DX11
    float4 tc0 : TEXCOORD0,
    float4 tc1 : TEXCOORD1,
    float4 tc2 : TEXCOORD2,
    float4 tc3 : TEXCOORD3,
    float4 tc4 : TEXCOORD4,
    float4 tc5 : TEXCOORD5,
    float4 tc6 : TEXCOORD6,
    float4 tc7 : TEXCOORD7
#else
#ifdef CENTROID0
    float4 tc0 : TEXCOORD0_centroid,
#else
    float4 tc0 : TEXCOORD0,
#endif
#ifdef CENTROID1
    float4 tc1 : TEXCOORD1_centroid,
#else
    float4 tc1 : TEXCOORD1,
#endif
#ifdef CENTROID2
    float4 tc2 : TEXCOORD2_centroid,
#else
    float4 tc2 : TEXCOORD2,
#endif
#ifdef CENTROID3
    float4 tc3 : TEXCOORD3_centroid,
#else
    float4 tc3 : TEXCOORD3,
#endif
    float4 tc7:TEXCOORD7
#endif // DX11
)
#ifndef MRT
    : COLOR
#endif
{
    float4 r0, r1;
    float3 e, f;
    r0.r= r0.g= r0.b= 0;
    r0.a= 1;
    float4 tex4;
    float4 tex5;
    float4 tex6;
    float4 tex7;
// texture stage 0 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex0= tex2Dproj(s0, tc0);
#else
    float4 tex0= s0tex.Sample(s0, tc0.xy/tc0.w);
#endif // DX11
// texture stage 1 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex1= tex2Dproj(s1, tc1);
#else
    float4 tex1= s1tex.Sample(s1, tc1.xy/tc1.w);
#endif // DX11
// texture stage 2 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex2= tex2Dproj(s2, tc2);
#else
    float4 tex2= s2tex.Sample(s2, tc2.xy/tc2.w);
#endif // DX11
// texture stage 3 mode 0 dot 0 input-stage 0
#ifndef DX11
    float4 tex3= tex2Dproj(s3, tc3);
#else
    float4 tex3= s3tex.Sample(s3, tc3.xy/tc3.w);
#endif // DX11
    // exp.components=1 term=1
    // line 24: R0= EXPAND(T2).EXPAND(D1)
    float temp0;
    float3 temp1;
    temp1= 2 * saturate(tex2.rgb) - 1;
    float3 temp2;
    float3 temp3;
    temp3= 2 * saturate(color1.rgb) - 1;
    float3 temp4;
    float temp5;
    temp5= dot(temp1, temp3);
    temp0= temp5;
    // exp.components=1 term=1
    // line 25: T2= EXPAND(T2).EXPAND(D0)
    float temp6;
    float3 temp7;
    temp7= 2 * saturate(tex2.rgb) - 1;
    float3 temp8;
    float3 temp9;
    temp9= 2 * saturate(color0.rgb) - 1;
    float3 temp10;
    float temp11;
    temp11= dot(temp7, temp9);
    temp6= temp11;
    // exp.components=1 term=1
    // line 26: T1a= EXPAND(D1b)
    float temp12;
    float temp13;
    temp13= 2 * saturate(color1.b) - 1;
    float3 temp14;
    temp12= temp13;
    // exp.components=1 term=1
    // line 27: T3a= EXPAND(D1a)*T0a
    float temp15;
    float temp16;
    temp16= 2 * saturate(color1.a) - 1;
    float3 temp17;
    float temp18;
    temp18= saturate(tex0.a);
    float3 temp19;
    float temp20;
    temp20= temp16 * temp18;
    temp15= temp20;
    r0.rgb= temp0;
    tex2.rgb= temp6;
    tex1.a= temp12;
    tex3.a= temp15;
    // exp.components=1 term=1
    // line 30: R1= EXPAND(D1).EXPAND(D0)
    float temp21;
    float3 temp22;
    temp22= 2 * saturate(color1.rgb) - 1;
    float3 temp23;
    float3 temp24;
    temp24= 2 * saturate(color0.rgb) - 1;
    float3 temp25;
    float temp26;
    temp26= dot(temp22, temp24);
    temp21= temp26;
    // exp.components=1 term=1 term=1
    // line 31: D1a= D1a*SIGNED(R0b) - D1a*SIGNED(T1a)
    float temp27;
    float temp28;
    float temp29;
    float temp30;
    temp30= saturate(color1.a);
    float3 temp31;
    float temp32;
    temp32= r0.b;
    float3 temp33;
    float temp34;
    temp34= temp30 * temp32;
    temp28= temp34;
    float temp35;
    temp35= saturate(color1.a);
    float3 temp36;
    float temp37;
    temp37= tex1.a;
    float3 temp38;
    float temp39;
    temp39= temp35 * temp37;
    temp29= temp39;
    temp27= temp28 - temp29;
    r1.rgb= temp21;
    color1.a= temp27;
    // exp.components=3 term=3
    // line 34: T0= OUT_SCALE_BY_2(T0*T1)
    float3 temp40;
    float3 temp41;
    temp41= saturate(tex0.rgb);
    float3 temp42;
    float3 temp43;
    temp43= saturate(tex1.rgb);
    float3 temp44;
    float3 temp45;
    temp45= temp41 * temp43;
    temp40= temp45;
    temp40= 2 * temp40;
    // exp.components=1 term=1 term=1
    // line 35: R1a= OUT_SCALE_BY_2(SIGNED(R0b)*SIGNED(T2b) - 1/2*SIGNED(R1b))
    float temp46;
    float temp47;
    float temp48;
    float temp49;
    temp49= r0.b;
    float3 temp50;
    float temp51;
    temp51= tex2.b;
    float3 temp52;
    float temp53;
    temp53= temp49 * temp51;
    temp47= temp53;
    float temp54;
    temp54= 0.5;
    float3 temp55;
    float temp56;
    temp56= r1.b;
    float3 temp57;
    float temp58;
    temp58= temp54 * temp56;
    temp48= temp58;
    temp46= temp47 - temp48;
    temp46= 2 * temp46;
    tex0.rgb= temp40;
    r1.a= temp46;
    // exp.components=3 term=3 term=3
    // line 39: R0= T3 + T3*SIGNED(D1a)
    float3 temp59;
    float3 temp60;
    float3 temp61;
    float3 temp62;
    temp62= saturate(tex3.rgb);
    float3 temp63;
    temp60= temp62;
    float3 temp64;
    temp64= saturate(tex3.rgb);
    float3 temp65;
    float temp66;
    temp66= color1.a;
    float3 temp67;
    float3 temp68;
    temp68= temp64 * temp66;
    temp61= temp68;
    temp59= temp60 + temp61;
    // exp.components=1 term=1
    // line 40: R0a= T2a
    float temp69;
    float temp70;
    temp70= saturate(tex2.a);
    float3 temp71;
    temp69= temp70;
    // exp.components=1 term=1
    // line 41: T3a= C0a*T3a
    float temp72;
    float temp73;
    temp73= 0.996078;
    float3 temp74;
    float temp75;
    temp75= saturate(tex3.a);
    float3 temp76;
    float temp77;
    temp77= temp73 * temp75;
    temp72= temp77;
    r0.rgb= temp59;
    r0.a= temp69;
    tex3.a= temp72;
    // exp.components=1 term=1
    // line 45: D1a= R1a*R1a
    float temp78;
    float temp79;
    temp79= saturate(r1.a);
    float3 temp80;
    float temp81;
    temp81= saturate(r1.a);
    float3 temp82;
    float temp83;
    temp83= temp79 * temp81;
    temp78= temp83;
    // exp.components=1 term=1
    // line 46: T1a= C0a*R0a
    float temp84;
    float temp85;
    temp85= c2.a;
    float3 temp86;
    float temp87;
    temp87= saturate(r0.a);
    float3 temp88;
    float temp89;
    temp89= temp85 * temp87;
    temp84= temp89;
    // exp.components=1 term=1 term=1
    // line 47: R1= C1a mux T3a
    float temp90;
    float temp91;
    float temp92;
    float temp93;
    temp93= 1.000000;
    float3 temp94;
    temp91= temp93;
    float temp95;
    temp95= saturate(tex3.a);
    float3 temp96;
    temp92= temp95;
    temp90= lerp(temp91,temp92,round(r0.a));
    color1.a= temp78;
    tex1.a= temp84;
    r1.rgb= temp90;
    // exp.components=3 term=3
    // line 51: R0= OUT_SCALE_BY_2(R0*T0)
    float3 temp97;
    float3 temp98;
    temp98= saturate(r0.rgb);
    float3 temp99;
    float3 temp100;
    temp100= saturate(tex0.rgb);
    float3 temp101;
    float3 temp102;
    temp102= temp98 * temp100;
    temp97= temp102;
    temp97= 2 * temp97;
    // exp.components=3 term=3
    // line 52: T3= OUT_SCALE_BY_2(C0*T3)
    float3 temp103;
    float3 temp104;
    temp104= c4.rgb;
    float3 temp105;
    float3 temp106;
    temp106= saturate(tex3.rgb);
    float3 temp107;
    float3 temp108;
    temp108= temp104 * temp106;
    temp103= temp108;
    temp103= 2 * temp103;
    // exp.components=1 term=1
    // line 53: R1a= D1a*D1a
    float temp109;
    float temp110;
    temp110= saturate(color1.a);
    float3 temp111;
    float temp112;
    temp112= saturate(color1.a);
    float3 temp113;
    float temp114;
    temp114= temp110 * temp112;
    temp109= temp114;
    r0.rgb= temp97;
    tex3.rgb= temp103;
    r1.a= temp109;
    // exp.components=3 term=3
    // line 70: D1= OUT_SCALE_BY_2(T3*T1a)
    float3 temp115;
    float3 temp116;
    temp116= saturate(tex3.rgb);
    float3 temp117;
    float temp118;
    temp118= saturate(tex1.a);
    float3 temp119;
    float3 temp120;
    temp120= temp116 * temp118;
    temp115= temp120;
    temp115= 2 * temp115;
    // exp.components=1 term=1 term=1
    // line 71: R1a= OUT_SCALE_BY_2(R1a*R1a - 1/2)
    float temp121;
    float temp122;
    float temp123;
    float temp124;
    temp124= saturate(r1.a);
    float3 temp125;
    float temp126;
    temp126= saturate(r1.a);
    float3 temp127;
    float temp128;
    temp128= temp124 * temp126;
    temp122= temp128;
    float temp129;
    temp129= 0.5;
    float3 temp130;
    temp123= temp129;
    temp121= temp122 - temp123;
    temp121= 2 * temp121;
    color1.rgb= temp115;
    r1.a= temp121;
    // exp.components=3 term=3
    // line 75: D1= OUT_SCALE_BY_2(R1a*D1)
    float3 temp131;
    float temp132;
    temp132= saturate(r1.a);
    float3 temp133;
    float3 temp134;
    temp134= saturate(color1.rgb);
    float3 temp135;
    float3 temp136;
    temp136= temp132 * temp134;
    temp131= temp136;
    temp131= 2 * temp131;
    color1.rgb= temp131;
    // exp.components=3 term=3 term=3
    // line 78: SRCCOLOR= R0 + D1
    float3 temp137;
    float3 temp138;
    float3 temp139;
    float3 temp140;
    temp140= saturate(r0.rgb);
    float3 temp141;
    temp138= temp140;
    float3 temp142;
    temp142= saturate(color1.rgb);
    float3 temp143;
    temp139= temp142;
    temp137= temp138 + temp139;
    // exp.components=1 term=1
    // line 79: SRCALPHA= R1b
    float temp144;
    float temp145;
    temp145= saturate(r1.b);
    float3 temp146;
    temp144= temp145;
    r0.rgb= temp137;
    r0.a= temp144;

//fog zvalue
    float linear_depth = tc7.w / zwriteout.z;
    float3 depth_stripe;

    depth_stripe.r = floor(linear_depth*256)/256;
    depth_stripe.g = frac(floor(linear_depth*65536)/256);
    depth_stripe.b = frac(floor(linear_depth*65536*256)/256);

#ifdef ZPRIME
    //r0.a has alpha kill value
    r0.rgb = depth_stripe.rgb;
#endif

#ifdef ALPHA_TEST
#ifdef ALPHA_TEST_NOT_EQUAL
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_GREATER
    clip(r0.a - ALPHA_TEST);        
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#elif ALPHA_TEST_LESS
    clip(ALPHA_TEST - r0.a);
    clip(any(r0.a - ALPHA_TEST) - 0.5f);    
#endif
#endif // ALPHA_TEST

#ifndef MRT
    return r0;
#else
    MRT_return retval;
    retval.color = r0;
    retval.depth.rgb = depth_stripe.rgb;
    retval.depth.a = r0.a;
    return retval;
#endif
}
